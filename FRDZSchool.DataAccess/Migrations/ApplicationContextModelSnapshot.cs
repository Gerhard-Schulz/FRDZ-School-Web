// <auto-generated />
using System;
using FRDZSchool.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FRDZSchool.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FRDZSchool.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Grade_Num");

                    b.Property<string>("Litera")
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("Grade_Index");

                    b.Property<DateTime>("AYear")
                        .HasColumnType("datetime2")
                        .HasColumnName("Academic_Year");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "Litera", "AYear");

                    b.ToTable("Grade");
                });

            modelBuilder.Entity("FRDZSchool.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Lesson_Num");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code_Obj")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date_And_Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Home_Task")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lesson_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Teacher_Num")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Lesson");
                });

            modelBuilder.Entity("FRDZSchool.Models.Lesson_Student", b =>
                {
                    b.Property<int>("Lesson_Id")
                        .HasColumnType("int")
                        .HasColumnName("Lesson_Num");

                    b.Property<int>("Student_Id")
                        .HasColumnType("int")
                        .HasColumnName("Student_Num");

                    b.Property<decimal?>("Mark")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Visiting")
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Lesson_Id", "Student_Id");

                    b.ToTable("Lesson_Student");
                });

            modelBuilder.Entity("FRDZSchool.Models.School_Object", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Code");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name_Obj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("School_Object");
                });

            modelBuilder.Entity("FRDZSchool.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Student_Num");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("FRDZSchool.Models.Student_Grade", b =>
                {
                    b.Property<int>("Grade_Id")
                        .HasColumnType("int")
                        .HasColumnName("Grade_Num");

                    b.Property<string>("Litera")
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("Grade_Index");

                    b.Property<DateTime>("AYear")
                        .HasColumnType("datetime2")
                        .HasColumnName("Academic_Year");

                    b.Property<int>("Student_Id")
                        .HasColumnType("int")
                        .HasColumnName("Student_Num");

                    b.HasKey("Grade_Id", "Litera", "AYear", "Student_Id");

                    b.ToTable("Student_Grade");
                });

            modelBuilder.Entity("FRDZSchool.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Teacher_Num");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Experience")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Post")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel_Num")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
